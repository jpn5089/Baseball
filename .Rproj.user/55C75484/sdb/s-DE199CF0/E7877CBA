{
    "collab_server" : "",
    "contents" : "library(XML)\nlibrary(dplyr)\n\n#File with Player Fangraphs URL and xpath\ntest <- read.csv(\"C://Users/johnp/Documents/GitHub/Baseball/WAR_Input.csv\")\n\n#Use merge statement if you just grab csv's with 2017 stats straight from FanGraphs \n#Merge needed bc those datasets may not include all of our 360 players\n\n#Injured, Suspended, Minors\n\n#Big Sexy          -> DeSclafani\n#Doubles or Nothin -> Giolito, Thornburg\n#Billy Heywood     -> A. Reyes, Smyly, Kang, Kazmir\n#Bluff Bunters     -> No one\n#Rockford Peaches  -> No one\n#Baumgardner       -> Capps, M. Cabrera\n#Boyles            -> No One\n#Ellis             -> Dahl\n#Tierney           -> No One\n#Tebowie Baysox    -> No One\n#Natural           -> No One\n#War Tour          -> No one\n\n#Create empty list  \nwar <- list()\n\nfor (i in 1:360){\n  print(i)\n  print(test[i,2])\n  data_war <- htmlParse(as.character(test[i,7])) #URL for parsing WAR\n  #Using that URL as well as xpath to grab 2017 WAR value\n  war_path <- xpathSApply(data_war, as.character(test[i,8]), xmlValue)\n  data_PA_IP <- htmlParse(as.character(test[i,7])) #URL for parsing PA or IP\n  #Using that URL as well as xpath to grab 2017 PA or IP value\n  PA_IP_path <- xpathSApply(data_PA_IP, as.character(test[i,9]), xmlValue)\n  #Choose values you want to keep from CSV \n  war[[i]] <- data.frame(test[i,2], test[i,4], test[i,5], war_path, PA_IP_path, test[i,10]) \n}\n\n#Create your data table\nwar_final <- do.call(rbind,war) %>%\n  mutate(war_path   = as.numeric(as.character(war_path))) %>%\n  mutate(PA_IP_path   = as.numeric(as.character(PA_IP_path))) %>%\n  mutate(test.i..2. = as.character(test.i..2.)) %>%\n  mutate(test.i..4. = as.character(test.i..4.))\n\n#Rename columns\ncolnames(war_final) <- c(\"Player\", \"Position\", \"Team\", \"WAR\", \"PA_IP\", \"Status\")\n\n#List players who haven't played a game in 2017\n\nvoid <- war_final$Player %in% c('Anthony DeSclafani', 'Lucas Giolito', \n                                'Tyler Thornburg', 'Alex Reyes', 'Drew Smyly',\n                                'Jung Ho Kang', 'Scott Kazmir', 'Carter Capps',\n                                'Mauricio Cabrera', 'David Dahl')\n#Set their WAR and PA_IP value to 0\nwar_final$WAR[void] <- 0\nwar_final$PA_IP[void] <- 0\n#war_final$WAR[294] <- -0.4\n#war_final$PA_IP[294] <- 181\n# war_final$WAR[68] <- 0.4\n# war_final$PA_IP[68] <- 37.1\n# war_final$WAR[16] <- 1.8\n# war_final$PA_IP[16] <- 37.2\n    \n#Account for bench player's 50% weight\nfor (i in 1:360) {\n  \n  if (war_final$Status[i] == \"Bench\") {\n    war_final$WAR[i] = war_final$WAR[i]*0.5\n  } else {\n    war_final$WAR[i] = war_final$WAR[i]\n  }\n}\n\nfor (i in 1:360) {\n  \n  if (war_final$Status[i] == \"Bench\") {\n    war_final$PA_IP[i] = war_final$PA_IP[i]*0.5\n  } else {\n    war_final$PA_IP[i] = war_final$PA_IP[i]\n  }\n}\n\n#Total War by Team\ntotal_war <- group_by(war_final, Team) %>%\n  summarize(total_war_sum = sum(WAR))\n\n#Filter Pitchers\npitchers <- filter(war_final, Position == \"P\")\n\n#Sum by War\nstandings_PWar <- group_by(pitchers, Team) %>%\n  summarize(pitcher_war_sum = sum(WAR)) \n\n#Sum by IP\nstandings_P_IP <- group_by(pitchers, Team) %>%\n  summarize(IP_sum  = sum(PA_IP))\n\n#Merge all Pitcher stats\npitch <- merge(standings_PWar, standings_P_IP, by = \"Team\") %>%\n  mutate(WARPerIP = pitcher_war_sum/IP_sum)\n\n#Filter Batters\nbatters <- filter(war_final, Position != \"P\")\n\n#Sum by War\nstandings_BatWar <- group_by(batters, Team) %>%\n  summarize(batter_war_sum = sum(WAR)) \n\n#Sum by IP\nstandings_Bat_IP <- group_by(batters, Team) %>%\n  summarize(PA_sum  = sum(PA_IP))\n\n#Merge all Batter stats\nbat <- merge(standings_BatWar, standings_Bat_IP, by = \"Team\") %>%\n  mutate(WARPerPA = batter_war_sum/PA_sum)\n\n#Merge total, pitchers, and batters\nfirst <- merge(total_war, pitch, by = \"Team\")\nstandings <- merge(first, bat, by = \"Team\")\n  \ncolnames(standings)[2] <- \"Total WAR\"\nordered_stand <- standings[order(-standings$`Total WAR`),]\n\n\nwrite.csv(war_final, \"C://Users/johnp/Documents/GitHub/Baseball/WAR_Output.csv\")\nwrite.csv(ordered_stand, \"C://Users/johnp/Documents/GitHub/Baseball/WAR_Standings.csv\")\n",
    "created" : 1501888690721.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2335321190",
    "id" : "E7877CBA",
    "lastKnownWriteTime" : 1501905454,
    "last_content_update" : 1501905454593,
    "path" : "~/GitHub/Baseball/WAR.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}